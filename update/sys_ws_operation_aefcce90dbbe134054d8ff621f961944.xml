<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl/>
        <http_method>POST</http_method>
        <name>saveUserData</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
    var message = '';
    var jsonData = [];
    var variables = {};
    var body = request.body.data; //this string will be saved into database
	var action = body.action;
	var userId = body.userId;
	var appName = body.applicationName;
   
	for(key in body){
		variables[key] = body[key];
	}
	
	var saveData = JSON.stringify(variables);
	
	if(action == 'add'){
        var save_request = new GlideRecord('x_naci_account_act_account_activation_saved_request');
        save_request.initialize();
        save_request.u_value = saveData;
        save_request.u_userid = userId;
        save_request.u_application_name = appName;
        message = save_request.insert();
     }else if(action == 'update'){
       var existId = variables['savedId'];
       var update_request = new GlideRecord('x_naci_account_act_account_activation_saved_request');
       update_request.addQuery('sys_id',existId);
       update_request.query();
       update_request.next();
       update_request.u_value = saveData;
       update_request.u_userid = userId;
       update_request.u_application_name = appName;
       answers_sys_id = update_request.update();                    
     }else if(action == 'delete'){
         var saved_id =variables['savedId'];
         var delete_request = new GlideRecord('x_naci_account_act_account_activation_saved_request');
         delete_request.addQuery('sys_id',saved_id);
         delete_request.query();
         delete_request.next();
         answers_sys_id = delete_request.deleteRecord();
         message = saved_id;
     }else{
         message = "Invalid action.";
     }
     jsonData.push({
           message: message,
     });
                
     return jsonData;

})(request, response);]]></operation_script>
        <operation_uri>/api/x_naci_account_act/accountactivationscoped/saveUserData</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/saveUserData</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>zhoujim@nih.gov</sys_created_by>
        <sys_created_on>2018-06-15 20:12:33</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>aefcce90dbbe134054d8ff621f961944</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>saveUserData</sys_name>
        <sys_package display_value="Account Activation" source="x_naci_account_act">cff40c40dbb29f00f59974131f961939</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Account Activation">cff40c40dbb29f00f59974131f961939</sys_scope>
        <sys_update_name>sys_ws_operation_aefcce90dbbe134054d8ff621f961944</sys_update_name>
        <sys_updated_by>zhoujim@nih.gov</sys_updated_by>
        <sys_updated_on>2018-08-08 13:58:40</sys_updated_on>
        <web_service_definition display_value="accountActivationScoped">7e930e58db7e134054d8ff621f96195e</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
